{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst API_URL = 'http://localhost:5001/api';\n\n//const register = (userData) => axios.post(`${API_URL}/auth/register`, userData);\n\nconst register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\n    // Optionally, show a success toast or return response data\n    toast.success('Registration successful!');\n    return response;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Registration error:', error);\n    toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed. Please try again.');\n    throw error;\n  }\n};\nconst login = async (userData, navigate) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, userData);\n    console.log(response);\n    localStorage.setItem('token', response.data.token);\n    navigate('/diet');\n  } catch (error) {\n    console.error('Login error:', error);\n    toast.error('Login failed. Please try again.');\n  }\n};\n\n// ✅ Fetch user profile settings\nconst fetchSavedUserData = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/users/settings`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user settings:', error);\n    toast.error('Could not fetch user settings.');\n    return null;\n  }\n};\n\n// ✅ Update user settings (Basic Profile Info)\nconst updateUserSettings = async (token, userData) => {\n  try {\n    await axios.post(`${API_URL}/users/settings`, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    toast.success('User settings updated successfully.');\n  } catch (error) {\n    console.error('Error updating settings:', error);\n    toast.error('Error updating user settings.');\n  }\n};\n\n// ✅ Update user preferences (Diet & Activity Data)\nconst updateUserPreferences = async (token, preferencesData) => {\n  try {\n    const response = await axios.post(`${API_URL}/preferences`, preferencesData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"✅ Preferences update response:\", response.data);\n    toast.success('User preferences updated successfully.');\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"❌ Error updating preferences:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    toast.error('Error updating user preferences.');\n  }\n};\nconst fetchUserPreferences = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/preferences`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user preferences:', error);\n    return null;\n  }\n};\n\n// ✅ Diet Plan Endpoints\nconst generateDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/generate`, dietData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nconst getDietPlan = token => axios.get(`${API_URL}/diet`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nconst fetchDailyDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/info`, dietData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// ✅ Export all functions\nexport { register, login, fetchSavedUserData, fetchUserPreferences, updateUserSettings, updateUserPreferences,\n// ✅ Now included for preferences updates\ngenerateDietPlan, getDietPlan, fetchDailyDietPlan };","map":{"version":3,"names":["axios","toast","API_URL","register","userData","response","post","success","error","_error$response","_error$response$data","console","data","message","login","navigate","log","localStorage","setItem","token","fetchSavedUserData","get","headers","Authorization","updateUserSettings","updateUserPreferences","preferencesData","_error$response2","fetchUserPreferences","generateDietPlan","dietData","getDietPlan","fetchDailyDietPlan"],"sources":["/Users/ianrooney/dd/Fit-Ai-Front-master/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_URL = 'http://localhost:5001/api';\n\n//const register = (userData) => axios.post(`${API_URL}/auth/register`, userData);\n\n\nconst register = async (userData) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\n      // Optionally, show a success toast or return response data\n      toast.success('Registration successful!');\n      return response;\n    } catch (error) {\n      console.error('Registration error:', error);\n      toast.error(error.response?.data?.message || 'Registration failed. Please try again.');\n      throw error;\n    }\n  };\n  \n\nconst login = async (userData, navigate) => {\n    try {\n        const response = await axios.post(`${API_URL}/auth/login`, userData);\n        console.log(response);\n        localStorage.setItem('token', response.data.token);\n        navigate('/diet');\n    } catch (error) {\n        console.error('Login error:', error);\n        toast.error('Login failed. Please try again.');\n    }\n};\n\n// ✅ Fetch user profile settings\nconst fetchSavedUserData = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/users/settings`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(response);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching user settings:', error);\n        toast.error('Could not fetch user settings.');\n        return null;\n    }\n};\n\n// ✅ Update user settings (Basic Profile Info)\nconst updateUserSettings = async (token, userData) => {\n    try {\n        await axios.post(`${API_URL}/users/settings`, userData, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        toast.success('User settings updated successfully.');\n    } catch (error) {\n        console.error('Error updating settings:', error);\n        toast.error('Error updating user settings.');\n    }\n};\n\n// ✅ Update user preferences (Diet & Activity Data)\nconst updateUserPreferences = async (token, preferencesData) => {\n    try {\n        const response = await axios.post(`${API_URL}/preferences`, preferencesData, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"✅ Preferences update response:\", response.data);\n        toast.success('User preferences updated successfully.');\n        return response.data;\n    } catch (error) {\n        console.error(\"❌ Error updating preferences:\", error.response?.data || error.message);\n        toast.error('Error updating user preferences.');\n    }\n};\nconst fetchUserPreferences = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/preferences`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching user preferences:', error);\n        return null;\n    }\n};\n\n// ✅ Diet Plan Endpoints\nconst generateDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/generate`, dietData, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\nconst getDietPlan = (token) => axios.get(`${API_URL}/diet`, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\nconst fetchDailyDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/info`, dietData, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\n// ✅ Export all functions\nexport { \n    register, \n    login, \n    fetchSavedUserData, \n    fetchUserPreferences,\n    updateUserSettings, \n    updateUserPreferences, // ✅ Now included for preferences updates\n    generateDietPlan, \n    getDietPlan, \n    fetchDailyDietPlan \n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}