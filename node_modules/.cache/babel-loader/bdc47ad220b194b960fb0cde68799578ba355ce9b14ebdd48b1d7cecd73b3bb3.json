{"ast":null,"code":"// File: src/sagas.js\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { generateDietPlan, getDietPlan, fetchDailyDietPlan } from '../services/api';\nimport { setDailyDietPlan, openPopup } from './actions/dietActions';\nfunction* fetchDietPlanSaga(action) {\n  try {\n    const response = yield call(generateDietPlan, action.payload.formData, action.payload.token);\n    const parsedPlan = action.payload.parseDietPlan(response.data.dietPlan);\n    yield put({\n      type: 'FETCH_DIET_PLAN_SUCCESS',\n      payload: parsedPlan\n    });\n  } catch (error) {\n    yield put({\n      type: 'FETCH_DIET_PLAN_FAILURE',\n      payload: error.message\n    });\n  }\n}\nfunction* loadDietPlanSaga(action) {\n  try {\n    const response = yield call(getDietPlan, action.payload.token);\n    const parsedPlan = action.payload.parseDietPlan(response.data.dietPlan);\n    yield put({\n      type: 'LOAD_DIET_PLAN_SUCCESS',\n      payload: parsedPlan\n    });\n  } catch (error) {\n    yield put({\n      type: 'LOAD_DIET_PLAN_FAILURE',\n      payload: error.message\n    });\n  }\n}\nfunction* fetchDailyDietPlanSaga(action) {\n  try {\n    console.log(\"action\", action);\n    const response = yield call(fetchDailyDietPlan, action.payload.dietData, action.payload.token);\n    yield put(setDailyDietPlan(response.data));\n    yield put(openPopup());\n  } catch (error) {\n    console.error('Error fetching daily diet plan:', error);\n  }\n}\n\n// function* watchDietActions() {\n\n// }\n\n// export default function* rootSaga() {\n//   yield watchDietActions();\n// }\n\nfunction* watchDietActions() {\n  yield takeLatest('FETCH_DIET_PLAN_REQUEST', fetchDietPlanSaga);\n  yield takeLatest('LOAD_DIET_PLAN_REQUEST', loadDietPlanSaga);\n  yield takeLatest('FETCH_DAILY_DIET_PLAN_REQUEST', fetchDailyDietPlanSaga);\n}\nexport default function* rootSaga() {\n  yield watchDietActions();\n}","map":{"version":3,"names":["call","put","takeLatest","generateDietPlan","getDietPlan","fetchDailyDietPlan","setDailyDietPlan","openPopup","fetchDietPlanSaga","action","response","payload","formData","token","parsedPlan","parseDietPlan","data","dietPlan","type","error","message","loadDietPlanSaga","fetchDailyDietPlanSaga","console","log","dietData","watchDietActions","rootSaga"],"sources":["/Users/ianrooney/dd/Fit-Ai-Front-master/src/store/sagas.js"],"sourcesContent":["// File: src/sagas.js\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { generateDietPlan, getDietPlan, fetchDailyDietPlan } from '../services/api';\nimport { setDailyDietPlan, openPopup } from './actions/dietActions';\n\nfunction* fetchDietPlanSaga(action) {\n  try {\n    const response = yield call(generateDietPlan, action.payload.formData, action.payload.token);\n    const parsedPlan = action.payload.parseDietPlan(response.data.dietPlan);\n    yield put({ type: 'FETCH_DIET_PLAN_SUCCESS', payload: parsedPlan });\n  } catch (error) {\n    yield put({ type: 'FETCH_DIET_PLAN_FAILURE', payload: error.message });\n  }\n}\n\nfunction* loadDietPlanSaga(action) {\n  try {\n    const response = yield call(getDietPlan, action.payload.token);\n    const parsedPlan = action.payload.parseDietPlan(response.data.dietPlan);\n    yield put({ type: 'LOAD_DIET_PLAN_SUCCESS', payload: parsedPlan });\n  } catch (error) {\n    yield put({ type: 'LOAD_DIET_PLAN_FAILURE', payload: error.message });\n  }\n}\n\nfunction* fetchDailyDietPlanSaga(action) {\n  try {\n    console.log(\"action\", action)\n    const response = yield call(fetchDailyDietPlan, action.payload.dietData, action.payload.token);\n    yield put(setDailyDietPlan(response.data));\n    yield put(openPopup());\n  } catch (error) {\n    console.error('Error fetching daily diet plan:', error);\n  }\n}\n\n// function* watchDietActions() {\n \n// }\n\n// export default function* rootSaga() {\n//   yield watchDietActions();\n// }\n\nfunction* watchDietActions() {\n  yield takeLatest('FETCH_DIET_PLAN_REQUEST', fetchDietPlanSaga);\n  yield takeLatest('LOAD_DIET_PLAN_REQUEST', loadDietPlanSaga);\n  yield takeLatest('FETCH_DAILY_DIET_PLAN_REQUEST', fetchDailyDietPlanSaga);\n}\n\nexport default function* rootSaga() {\n  yield watchDietActions();\n}\n"],"mappings":"AAAA;AACA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,SAASC,gBAAgB,EAAEC,WAAW,EAAEC,kBAAkB,QAAQ,iBAAiB;AACnF,SAASC,gBAAgB,EAAEC,SAAS,QAAQ,uBAAuB;AAEnE,UAAUC,iBAAiBA,CAACC,MAAM,EAAE;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACG,gBAAgB,EAAEM,MAAM,CAACE,OAAO,CAACC,QAAQ,EAAEH,MAAM,CAACE,OAAO,CAACE,KAAK,CAAC;IAC5F,MAAMC,UAAU,GAAGL,MAAM,CAACE,OAAO,CAACI,aAAa,CAACL,QAAQ,CAACM,IAAI,CAACC,QAAQ,CAAC;IACvE,MAAMhB,GAAG,CAAC;MAAEiB,IAAI,EAAE,yBAAyB;MAAEP,OAAO,EAAEG;IAAW,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMlB,GAAG,CAAC;MAAEiB,IAAI,EAAE,yBAAyB;MAAEP,OAAO,EAAEQ,KAAK,CAACC;IAAQ,CAAC,CAAC;EACxE;AACF;AAEA,UAAUC,gBAAgBA,CAACZ,MAAM,EAAE;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACI,WAAW,EAAEK,MAAM,CAACE,OAAO,CAACE,KAAK,CAAC;IAC9D,MAAMC,UAAU,GAAGL,MAAM,CAACE,OAAO,CAACI,aAAa,CAACL,QAAQ,CAACM,IAAI,CAACC,QAAQ,CAAC;IACvE,MAAMhB,GAAG,CAAC;MAAEiB,IAAI,EAAE,wBAAwB;MAAEP,OAAO,EAAEG;IAAW,CAAC,CAAC;EACpE,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMlB,GAAG,CAAC;MAAEiB,IAAI,EAAE,wBAAwB;MAAEP,OAAO,EAAEQ,KAAK,CAACC;IAAQ,CAAC,CAAC;EACvE;AACF;AAEA,UAAUE,sBAAsBA,CAACb,MAAM,EAAE;EACvC,IAAI;IACFc,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEf,MAAM,CAAC;IAC7B,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACK,kBAAkB,EAAEI,MAAM,CAACE,OAAO,CAACc,QAAQ,EAAEhB,MAAM,CAACE,OAAO,CAACE,KAAK,CAAC;IAC9F,MAAMZ,GAAG,CAACK,gBAAgB,CAACI,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1C,MAAMf,GAAG,CAACM,SAAS,CAAC,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdI,OAAO,CAACJ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;EACzD;AACF;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAUO,gBAAgBA,CAAA,EAAG;EAC3B,MAAMxB,UAAU,CAAC,yBAAyB,EAAEM,iBAAiB,CAAC;EAC9D,MAAMN,UAAU,CAAC,wBAAwB,EAAEmB,gBAAgB,CAAC;EAC5D,MAAMnB,UAAU,CAAC,+BAA+B,EAAEoB,sBAAsB,CAAC;AAC3E;AAEA,eAAe,UAAUK,QAAQA,CAAA,EAAG;EAClC,MAAMD,gBAAgB,CAAC,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}