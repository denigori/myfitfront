{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst API_URL = 'http://localhost:5001/api';\nconst register = userData => axios.post(`${API_URL}/auth/register`, userData);\nconst login = async (userData, navigate) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, userData);\n    console.log(response);\n    localStorage.setItem('token', response.data.token);\n    navigate('/diet');\n  } catch (error) {\n    console.error('Login error:', error);\n    toast.error('Login failed. Please try again.');\n  }\n};\n\n// ✅ Fetch user profile settings\nconst fetchSavedUserData = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/users/settings`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user settings:', error);\n    toast.error('Could not fetch user settings.');\n    return null;\n  }\n};\n\n// ✅ Update user settings (Basic Profile Info)\nconst updateUserSettings = async (token, userData) => {\n  try {\n    await axios.post(`${API_URL}/users/settings`, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    toast.success('User settings updated successfully.');\n  } catch (error) {\n    console.error('Error updating settings:', error);\n    toast.error('Error updating user settings.');\n  }\n};\n\n// ✅ Update user preferences (Diet & Activity Data)\nconst updateUserPreferences = async (token, preferencesData) => {\n  try {\n    const response = await axios.post(`${API_URL}/preferences`, preferencesData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"✅ Preferences update response:\", response.data);\n    toast.success('User preferences updated successfully.');\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"❌ Error updating preferences:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    toast.error('Error updating user preferences.');\n  }\n};\nconst fetchUserPreferences = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/preferences`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user preferences:', error);\n    return null;\n  }\n};\n\n// ✅ Diet Plan Endpoints\nconst generateDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/generate`, dietData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nconst getDietPlan = token => axios.get(`${API_URL}/diet`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nconst fetchDailyDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/info`, dietData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// ✅ Export all functions\nexport { register, login, fetchSavedUserData, fetchUserPreferences, updateUserSettings, updateUserPreferences,\n// ✅ Now included for preferences updates\ngenerateDietPlan, getDietPlan, fetchDailyDietPlan };","map":{"version":3,"names":["axios","toast","API_URL","register","userData","post","login","navigate","response","console","log","localStorage","setItem","data","token","error","fetchSavedUserData","get","headers","Authorization","updateUserSettings","success","updateUserPreferences","preferencesData","_error$response","message","fetchUserPreferences","generateDietPlan","dietData","getDietPlan","fetchDailyDietPlan"],"sources":["/Users/ianrooney/dd/Fit-Ai-Front-master/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_URL = 'http://localhost:5001/api';\n\nconst register = (userData) => axios.post(`${API_URL}/auth/register`, userData);\n\nconst login = async (userData, navigate) => {\n    try {\n        const response = await axios.post(`${API_URL}/auth/login`, userData);\n        console.log(response);\n        localStorage.setItem('token', response.data.token);\n        navigate('/diet');\n    } catch (error) {\n        console.error('Login error:', error);\n        toast.error('Login failed. Please try again.');\n    }\n};\n\n// ✅ Fetch user profile settings\nconst fetchSavedUserData = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/users/settings`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(response);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching user settings:', error);\n        toast.error('Could not fetch user settings.');\n        return null;\n    }\n};\n\n// ✅ Update user settings (Basic Profile Info)\nconst updateUserSettings = async (token, userData) => {\n    try {\n        await axios.post(`${API_URL}/users/settings`, userData, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        toast.success('User settings updated successfully.');\n    } catch (error) {\n        console.error('Error updating settings:', error);\n        toast.error('Error updating user settings.');\n    }\n};\n\n// ✅ Update user preferences (Diet & Activity Data)\nconst updateUserPreferences = async (token, preferencesData) => {\n    try {\n        const response = await axios.post(`${API_URL}/preferences`, preferencesData, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"✅ Preferences update response:\", response.data);\n        toast.success('User preferences updated successfully.');\n        return response.data;\n    } catch (error) {\n        console.error(\"❌ Error updating preferences:\", error.response?.data || error.message);\n        toast.error('Error updating user preferences.');\n    }\n};\nconst fetchUserPreferences = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/preferences`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching user preferences:', error);\n        return null;\n    }\n};\n\n// ✅ Diet Plan Endpoints\nconst generateDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/generate`, dietData, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\nconst getDietPlan = (token) => axios.get(`${API_URL}/diet`, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\nconst fetchDailyDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/info`, dietData, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\n// ✅ Export all functions\nexport { \n    register, \n    login, \n    fetchSavedUserData, \n    fetchUserPreferences,\n    updateUserSettings, \n    updateUserPreferences, // ✅ Now included for preferences updates\n    generateDietPlan, \n    getDietPlan, \n    fetchDailyDietPlan \n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}