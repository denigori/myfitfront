{"ast":null,"code":"var _jsxFileName = \"/Users/ianrooney/dd/Fit-Ai-Front-master/src/components/DietForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './DietPlanForm.module.css';\nimport Spinner from './Spinner';\nimport DietPlan from './DietPlan';\nimport { fetchSavedUserData, getDietPlan } from '../api'; // ✅ Import functions from api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DietForm = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [dietPlan, setDietPlan] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    const token = localStorage.getItem('token');\n\n    // ✅ Use fetchSavedUserData from api.js\n    fetchSavedUserData(token).then(data => {\n      if (!data) {\n        setLoading(false);\n        return;\n      }\n      setUserData(data);\n      return getDietPlan(token); // ✅ Use getDietPlan from api.js\n    }).then(plan => {\n      if (plan) setDietPlan(parseDietPlan(plan.dietPlan)); // Ensure to use plan.dietPlan\n    }).catch(error => console.error(\"Error fetching diet plan:\", error)).finally(() => setLoading(false));\n  }, []);\n  const parseDietPlan = dietPlanText => {\n    return dietPlanText.split('\\n\\n').map(dayText => {\n      const [dayName, ...mealLines] = dayText.trim().split('\\n');\n      const meals = mealLines.map(line => {\n        const [mealType, description] = line.split(' - ').map(str => str.trim());\n        return {\n          meal: mealType,\n          description\n        };\n      });\n      return {\n        day: dayName,\n        meals\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dietPlanFormPage,\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.spinnerContainer,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), !loading && dietPlan ? /*#__PURE__*/_jsxDEV(DietPlan, {\n      dietPlan: dietPlan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.noPlanMessage,\n      children: \"No diet plan available. Please update your settings.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DietForm, \"c0z1/2rR+YPv6BA32WaCMOMKH+o=\");\n_c = DietForm;\nexport default DietForm;\nvar _c;\n$RefreshReg$(_c, \"DietForm\");","map":{"version":3,"names":["React","useEffect","useState","styles","Spinner","DietPlan","fetchSavedUserData","getDietPlan","jsxDEV","_jsxDEV","DietForm","_s","userData","setUserData","dietPlan","setDietPlan","loading","setLoading","token","localStorage","getItem","then","data","plan","parseDietPlan","catch","error","console","finally","dietPlanText","split","map","dayText","dayName","mealLines","trim","meals","line","mealType","description","str","meal","day","className","dietPlanFormPage","children","spinnerContainer","fileName","_jsxFileName","lineNumber","columnNumber","noPlanMessage","_c","$RefreshReg$"],"sources":["/Users/ianrooney/dd/Fit-Ai-Front-master/src/components/DietForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './DietPlanForm.module.css';\nimport Spinner from './Spinner';\nimport DietPlan from './DietPlan';\nimport { fetchSavedUserData, getDietPlan } from '../api';  // ✅ Import functions from api.js\n\nconst DietForm = () => {\n  const [userData, setUserData] = useState(null);\n  const [dietPlan, setDietPlan] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const token = localStorage.getItem('token');\n\n    // ✅ Use fetchSavedUserData from api.js\n    fetchSavedUserData(token)\n      .then((data) => {\n        if (!data) {\n          setLoading(false);\n          return;\n        }\n\n        setUserData(data);\n        return getDietPlan(token); // ✅ Use getDietPlan from api.js\n      })\n      .then((plan) => {\n        if (plan) setDietPlan(parseDietPlan(plan.dietPlan)); // Ensure to use plan.dietPlan\n      })\n      .catch((error) => console.error(\"Error fetching diet plan:\", error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const parseDietPlan = (dietPlanText) => {\n    return dietPlanText\n      .split('\\n\\n')\n      .map((dayText) => {\n        const [dayName, ...mealLines] = dayText.trim().split('\\n');\n        const meals = mealLines.map((line) => {\n          const [mealType, description] = line.split(' - ').map((str) => str.trim());\n          return { meal: mealType, description };\n        });\n        return { day: dayName, meals };\n      });\n  };\n\n  return (\n    <div className={styles.dietPlanFormPage}>\n      {loading && (\n        <div className={styles.spinnerContainer}>\n          <Spinner />\n        </div>\n      )}\n\n      {!loading && dietPlan ? (\n        <DietPlan dietPlan={dietPlan} />\n      ) : (\n        <p className={styles.noPlanMessage}>No diet plan available. Please update your settings.</p>\n      )}\n    </div>\n  );\n};\n\nexport default DietForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}