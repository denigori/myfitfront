{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst API_URL = 'http://localhost:5001/api';\n\n//const register = (userData) => axios.post(`${API_URL}/auth/register`, userData);\n\nconst register = async userData => {\n  try {\n    // Make the POST request to the backend\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\n    toast.success(response.data.message || 'Registration successful!');\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    // If user already exists, we'll receive a 409 with a specific message\n    const errMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed. Please try again.';\n    toast.error(errMsg);\n    throw error;\n  }\n};\nconst login = async (userData, navigate) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, userData);\n    console.log(response);\n    localStorage.setItem('token', response.data.token);\n    navigate('/diet');\n  } catch (error) {\n    console.error('Login error:', error);\n    toast.error('Login failed. Please try again.');\n  }\n};\n\n// ✅ Fetch user profile settings\nconst fetchSavedUserData = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/users/settings`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user settings:', error);\n    toast.error('Could not fetch user settings.');\n    return null;\n  }\n};\n\n// ✅ Update user settings (Basic Profile Info)\nconst updateUserSettings = async (token, userData) => {\n  try {\n    await axios.post(`${API_URL}/users/settings`, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    toast.success('User settings updated successfully.');\n  } catch (error) {\n    console.error('Error updating settings:', error);\n    toast.error('Error updating user settings.');\n  }\n};\n\n// ✅ Update user preferences (Diet & Activity Data)\nconst updateUserPreferences = async (token, preferencesData) => {\n  try {\n    const response = await axios.post(`${API_URL}/preferences`, preferencesData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"✅ Preferences update response:\", response.data);\n    toast.success('User preferences updated successfully.');\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"❌ Error updating preferences:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    toast.error('Error updating user preferences.');\n  }\n};\nconst fetchUserPreferences = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/preferences`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user preferences:', error);\n    return null;\n  }\n};\n\n// ✅ Exercise Endpoints\nconst generateExercise = (dietData, token) => axios.post(`${API_URL}/exercise/generate`, dietData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nconst getExercise = token => axios.get(`${API_URL}/exercise`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// ✅ Diet Plan Endpoints\nconst generateDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/generate`, dietData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nconst getDietPlan = token => axios.get(`${API_URL}/diet`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nconst fetchDailyDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/info`, dietData, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// ✅ Export all functions\nexport { register, login, fetchSavedUserData, fetchUserPreferences, updateUserSettings, updateUserPreferences,\n// ✅ Now included for preferences updates\ngenerateDietPlan, getDietPlan, fetchDailyDietPlan };","map":{"version":3,"names":["axios","toast","API_URL","register","userData","response","post","success","data","message","error","_error$response","_error$response$data","errMsg","login","navigate","console","log","localStorage","setItem","token","fetchSavedUserData","get","headers","Authorization","updateUserSettings","updateUserPreferences","preferencesData","_error$response2","fetchUserPreferences","generateExercise","dietData","getExercise","generateDietPlan","getDietPlan","fetchDailyDietPlan"],"sources":["/Users/ianrooney/dd/Fit-Ai-Front-master/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_URL = 'http://localhost:5001/api';\n\n//const register = (userData) => axios.post(`${API_URL}/auth/register`, userData);\n\n\nconst register = async (userData) => {\n    try {\n        // Make the POST request to the backend\n        const response = await axios.post(`${API_URL}/auth/register`, userData);\n        toast.success(response.data.message || 'Registration successful!');\n        return response.data;\n      } catch (error) {\n        // If user already exists, we'll receive a 409 with a specific message\n        const errMsg = error.response?.data?.message || 'Registration failed. Please try again.';\n        toast.error(errMsg);\n        throw error;\n      }\n  };\n  \n\nconst login = async (userData, navigate) => {\n    try {\n        const response = await axios.post(`${API_URL}/auth/login`, userData);\n        console.log(response);\n        localStorage.setItem('token', response.data.token);\n        navigate('/diet');\n    } catch (error) {\n        console.error('Login error:', error);\n        toast.error('Login failed. Please try again.');\n    }\n};\n\n// ✅ Fetch user profile settings\nconst fetchSavedUserData = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/users/settings`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(response);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching user settings:', error);\n        toast.error('Could not fetch user settings.');\n        return null;\n    }\n};\n\n// ✅ Update user settings (Basic Profile Info)\nconst updateUserSettings = async (token, userData) => {\n    try {\n        await axios.post(`${API_URL}/users/settings`, userData, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        toast.success('User settings updated successfully.');\n    } catch (error) {\n        console.error('Error updating settings:', error);\n        toast.error('Error updating user settings.');\n    }\n};\n\n// ✅ Update user preferences (Diet & Activity Data)\nconst updateUserPreferences = async (token, preferencesData) => {\n    try {\n        const response = await axios.post(`${API_URL}/preferences`, preferencesData, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"✅ Preferences update response:\", response.data);\n        toast.success('User preferences updated successfully.');\n        return response.data;\n    } catch (error) {\n        console.error(\"❌ Error updating preferences:\", error.response?.data || error.message);\n        toast.error('Error updating user preferences.');\n    }\n};\nconst fetchUserPreferences = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/preferences`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching user preferences:', error);\n        return null;\n    }\n};\n\n// ✅ Exercise Endpoints\nconst generateExercise = (dietData, token) => axios.post(`${API_URL}/exercise/generate`, dietData, {\n    headers: { Authorization: `Bearer ${token}` },\n});\nconst getExercise = (token) => axios.get(`${API_URL}/exercise`, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\n\n// ✅ Diet Plan Endpoints\nconst generateDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/generate`, dietData, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\nconst getDietPlan = (token) => axios.get(`${API_URL}/diet`, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\nconst fetchDailyDietPlan = (dietData, token) => axios.post(`${API_URL}/diet/info`, dietData, {\n    headers: { Authorization: `Bearer ${token}` },\n});\n\n// ✅ Export all functions\nexport { \n    register, \n    login, \n    fetchSavedUserData, \n    fetchUserPreferences,\n    updateUserSettings, \n    updateUserPreferences, // ✅ Now included for preferences updates\n    generateDietPlan, \n    getDietPlan, \n    fetchDailyDietPlan \n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}