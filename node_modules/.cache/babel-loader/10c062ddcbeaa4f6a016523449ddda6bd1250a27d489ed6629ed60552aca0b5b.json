{"ast":null,"code":"var _jsxFileName = \"/Users/ianrooney/dd/Fit-Ai-Front-master/src/components/Exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './Exercise.module.css'; // Ensure correct path\nimport Spinner from './Spinner';\nimport { fetchUserPreferences, getDietPlan, generateDietPlan } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExercisePage() {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [dietPlan, setDietPlan] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [generating, setGenerating] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) return; // No token => do nothing or redirect\n\n    setLoading(true);\n    fetchUserPreferences(token).then(data => {\n      if (!data) return;\n      setUserData(data);\n      return getDietPlan(token);\n    }).then(plan => {\n      if (plan && plan.dietPlan) {\n        try {\n          // If dietPlan is JSON\n          const parsed = JSON.parse(plan.dietPlan);\n          setDietPlan(parsed);\n        } catch (err) {\n          // Otherwise parse as text fallback\n          setDietPlan(parseDietPlan(plan.dietPlan));\n        }\n      }\n    }).catch(error => {\n      console.error('Error fetching diet plan:', error);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  /**\n   * parseDietPlan (Text-Fallback)\n   * -----------\n   * Splits text by blank lines => Day blocks\n   * Then each day block is lines => first line is day, rest are meals\n   * Format example:\n   *   Day 1\n   *   Breakfast - Oatmeal\n   *   Lunch - Chicken Salad\n   */\n  const parseDietPlan = (dietPlanText = '') => {\n    if (!dietPlanText.trim()) return [];\n    return dietPlanText.split('\\n\\n') // Split into day blocks by blank lines\n    .map(dayBlock => {\n      const lines = dayBlock.trim().split('\\n').map(l => l.trim());\n      if (!lines.length) return null;\n      const rawDayName = lines[0];\n      const dayNumber = rawDayName.replace(/^Day\\s*/i, ''); // e.g. \"Day 1\" => \"1\"\n      const mealLines = lines.slice(1);\n      const meals = mealLines.map(line => {\n        const [type, meal, description] = line.split(' - ').map(str => str.trim());\n        return {\n          type: type || 'Meal',\n          meal: meal || 'Unnamed Meal',\n          description: description || ''\n        };\n      });\n      return {\n        day: dayNumber,\n        meals\n      };\n    }).filter(Boolean);\n  };\n\n  /**\n   * handleGenerateDiet\n   * -----------\n   * Generates a new diet plan using userData via the API.\n   */\n  const handleGenerateDiet = async () => {\n    setGenerating(true);\n    const token = localStorage.getItem('token');\n    if (!userData) {\n      console.error('No user preferences found!');\n      setGenerating(false);\n      return;\n    }\n    try {\n      const response = await generateDietPlan(userData, token);\n      if (response && response.data.dietPlan) {\n        const parsedDietPlan = JSON.parse(response.data.dietPlan);\n        setDietPlan(parsedDietPlan);\n      } else {\n        console.error(\"API response doesn't contain a valid diet plan.\");\n      }\n    } catch (error) {\n      console.error('Error generating diet plan:', error);\n    } finally {\n      setGenerating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dietPlanFormPage,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.generateButton,\n      onClick: handleGenerateDiet,\n      disabled: generating,\n      children: generating ? 'Generating...' : 'Generate Exercise'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.spinnerContainer,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this), !loading && dietPlan ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsContainer,\n      children: dietPlan.map((planItem, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dayCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.dayTitle,\n          children: [\"Day \", planItem.day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.mealsList,\n          children: planItem.meals.map((meal, mealIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.mealItem,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: meal.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 23\n            }, this), \":\", ' ', meal.meal, meal.description ? ` â€” ${meal.description}` : '']\n          }, mealIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, dayIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.noPlanMessage,\n      children: \"No diet plan available. Click \\\"Generate Diet Plan\\\" to create one.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 7\n  }, this);\n}\n_s(ExercisePage, \"bvdTkg2ojOwSyi2m7HV5by2pDN8=\");\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styles","Spinner","fetchUserPreferences","getDietPlan","generateDietPlan","jsxDEV","_jsxDEV","ExercisePage","_s","userData","setUserData","dietPlan","setDietPlan","loading","setLoading","generating","setGenerating","token","localStorage","getItem","then","data","plan","parsed","JSON","parse","err","parseDietPlan","catch","error","console","finally","dietPlanText","trim","split","map","dayBlock","lines","l","length","rawDayName","dayNumber","replace","mealLines","slice","meals","line","type","meal","description","str","day","filter","Boolean","handleGenerateDiet","response","parsedDietPlan","className","dietPlanFormPage","children","generateButton","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","spinnerContainer","cardsContainer","planItem","dayIndex","dayCard","dayTitle","mealsList","mealIndex","mealItem","noPlanMessage","_c","$RefreshReg$"],"sources":["/Users/ianrooney/dd/Fit-Ai-Front-master/src/components/Exercise.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './Exercise.module.css'; // Ensure correct path\nimport Spinner from './Spinner';\nimport { fetchUserPreferences, getDietPlan, generateDietPlan } from '../services/api';\n\nfunction ExercisePage () {\n\n\n\n    const [userData, setUserData] = useState(null);\n    const [dietPlan, setDietPlan] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [generating, setGenerating] = useState(false);\n  \n    useEffect(() => {\n      const token = localStorage.getItem('token');\n      if (!token) return; // No token => do nothing or redirect\n  \n      setLoading(true);\n  \n      fetchUserPreferences(token)\n        .then((data) => {\n          if (!data) return;\n          setUserData(data);\n          return getDietPlan(token);\n        })\n        .then((plan) => {\n          if (plan && plan.dietPlan) {\n            try {\n              // If dietPlan is JSON\n              const parsed = JSON.parse(plan.dietPlan);\n              setDietPlan(parsed);\n            } catch (err) {\n              // Otherwise parse as text fallback\n              setDietPlan(parseDietPlan(plan.dietPlan));\n            }\n          }\n        })\n        .catch((error) => {\n          console.error('Error fetching diet plan:', error);\n        })\n        .finally(() => setLoading(false));\n    }, []);\n  \n    /**\n     * parseDietPlan (Text-Fallback)\n     * -----------\n     * Splits text by blank lines => Day blocks\n     * Then each day block is lines => first line is day, rest are meals\n     * Format example:\n     *   Day 1\n     *   Breakfast - Oatmeal\n     *   Lunch - Chicken Salad\n     */\n    const parseDietPlan = (dietPlanText = '') => {\n      if (!dietPlanText.trim()) return [];\n  \n      return dietPlanText\n        .split('\\n\\n') // Split into day blocks by blank lines\n        .map((dayBlock) => {\n          const lines = dayBlock.trim().split('\\n').map((l) => l.trim());\n          if (!lines.length) return null;\n  \n          const rawDayName = lines[0];\n          const dayNumber = rawDayName.replace(/^Day\\s*/i, ''); // e.g. \"Day 1\" => \"1\"\n          const mealLines = lines.slice(1);\n  \n          const meals = mealLines.map((line) => {\n            const [type, meal, description] = line.split(' - ').map((str) => str.trim());\n            return {\n              type: type || 'Meal',\n              meal: meal || 'Unnamed Meal',\n              description: description || '',\n            };\n          });\n  \n          return { day: dayNumber, meals };\n        })\n        .filter(Boolean);\n    };\n  \n    /**\n     * handleGenerateDiet\n     * -----------\n     * Generates a new diet plan using userData via the API.\n     */\n    const handleGenerateDiet = async () => {\n      setGenerating(true);\n      const token = localStorage.getItem('token');\n  \n      if (!userData) {\n        console.error('No user preferences found!');\n        setGenerating(false);\n        return;\n      }\n  \n      try {\n        const response = await generateDietPlan(userData, token);\n        if (response && response.data.dietPlan) {\n          const parsedDietPlan = JSON.parse(response.data.dietPlan);\n          setDietPlan(parsedDietPlan);\n        } else {\n          console.error(\"API response doesn't contain a valid diet plan.\");\n        }\n      } catch (error) {\n        console.error('Error generating diet plan:', error);\n      } finally {\n        setGenerating(false);\n      }\n    };\n  \n    return (\n      <div className={styles.dietPlanFormPage}>\n        {/* Generate Diet Button */}\n        <button\n          className={styles.generateButton}\n          onClick={handleGenerateDiet}\n          disabled={generating}\n        >\n          {generating ? 'Generating...' : 'Generate Exercise'}\n        </button>\n  \n        {/* Show a loading spinner if fetching */}\n        {loading && (\n          <div className={styles.spinnerContainer}>\n            <Spinner />\n          </div>\n        )}\n  \n        {/* Scrollable Cards */}\n        {!loading && dietPlan ? (\n          <div className={styles.cardsContainer}>\n            {dietPlan.map((planItem, dayIndex) => (\n              <div className={styles.dayCard} key={dayIndex}>\n                <h2 className={styles.dayTitle}>Day {planItem.day}</h2>\n                <ul className={styles.mealsList}>\n                  {planItem.meals.map((meal, mealIndex) => (\n                    <li className={styles.mealItem} key={mealIndex}>\n                      <strong>{meal.type}</strong>:\n                      {' '}\n                      {meal.meal}\n                      {meal.description ? ` â€” ${meal.description}` : ''}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        ) : (\n          !loading && (\n            <p className={styles.noPlanMessage}>\n              No diet plan available. Click \"Generate Diet Plan\" to create one.\n            </p>\n          )\n        )}\n      </div>\n    );\n\n\n}\nexport default ExercisePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}