{"ast":null,"code":"var _jsxFileName = \"/Users/ianrooney/dd/Fit-Ai-Front-master/src/utils/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchUserPreferences } from '../services/api'; // your API call\nimport Spinner from '../components/Spinner'; // optional loading spinner\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [authorized, setAuthorized] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    // 1) Check if user is authenticated\n    if (!token) {\n      console.log(\"🚨 No token found, redirecting to /login\");\n      navigate('/login', {\n        replace: true\n      });\n      return;\n    }\n\n    // 2) Fetch user preferences to see if they exist\n    fetchUserPreferences(token).then(prefs => {\n      if (!prefs || isPreferencesEmpty(prefs)) {\n        // If preferences are empty, redirect to profile\n        console.log(\"🚨 Preferences are empty, redirecting to /profile\");\n        navigate('/profile', {\n          replace: true\n        });\n      } else {\n        // Preferences are valid, user can continue\n        console.log(\"✅ Preferences found, granting access\");\n        setAuthorized(true);\n      }\n    }).catch(error => {\n      console.error(\"❌ Error fetching user preferences:\", error);\n      // Optionally redirect or handle error\n      navigate('/profile', {\n        replace: true\n      });\n    }).finally(() => setLoading(false));\n  }, [navigate, location]);\n\n  // Helper function to check if preferences are empty\n  const isPreferencesEmpty = prefs => {\n    // Customize your logic:\n    return !prefs.weight || !prefs.height || !prefs.age || !prefs.favoriteFoods ||\n    // etc...\n    !prefs.dislikedFoods;\n  };\n\n  // While loading user prefs, show a spinner or null\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this); // or return null if you prefer\n  }\n\n  // If user has preferences, allow access\n  return authorized ? children : null;\n};\n_s(ProtectedRoute, \"HBSZWSDC/KrQCIf1WxQc3fwn68o=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useLocation","useNavigate","fetchUserPreferences","Spinner","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","loading","setLoading","authorized","setAuthorized","navigate","location","token","localStorage","getItem","console","log","replace","then","prefs","isPreferencesEmpty","catch","error","finally","weight","height","age","favoriteFoods","dislikedFoods","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ianrooney/dd/Fit-Ai-Front-master/src/utils/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchUserPreferences } from '../services/api'; // your API call\nimport Spinner from '../components/Spinner'; // optional loading spinner\n\nconst ProtectedRoute = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [authorized, setAuthorized] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    // 1) Check if user is authenticated\n    if (!token) {\n      console.log(\"🚨 No token found, redirecting to /login\");\n      navigate('/login', { replace: true });\n      return;\n    }\n\n    // 2) Fetch user preferences to see if they exist\n    fetchUserPreferences(token)\n      .then((prefs) => {\n        if (!prefs || isPreferencesEmpty(prefs)) {\n          // If preferences are empty, redirect to profile\n          console.log(\"🚨 Preferences are empty, redirecting to /profile\");\n          navigate('/profile', { replace: true });\n        } else {\n          // Preferences are valid, user can continue\n          console.log(\"✅ Preferences found, granting access\");\n          setAuthorized(true);\n        }\n      })\n      .catch((error) => {\n        console.error(\"❌ Error fetching user preferences:\", error);\n        // Optionally redirect or handle error\n        navigate('/profile', { replace: true });\n      })\n      .finally(() => setLoading(false));\n  }, [navigate, location]);\n\n  // Helper function to check if preferences are empty\n  const isPreferencesEmpty = (prefs) => {\n    // Customize your logic:\n    return (\n      !prefs.weight ||\n      !prefs.height ||\n      !prefs.age ||\n      !prefs.favoriteFoods ||\n      // etc...\n      !prefs.dislikedFoods\n    );\n  };\n\n  // While loading user prefs, show a spinner or null\n  if (loading) {\n    return <Spinner />; // or return null if you prefer\n  }\n\n  // If user has preferences, allow access\n  return authorized ? children : null;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACrE,SAASC,oBAAoB,QAAQ,iBAAiB,CAAC,CAAC;AACxD,OAAOC,OAAO,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAE3C;IACA,IAAI,CAACF,KAAK,EAAE;MACVG,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACvDN,QAAQ,CAAC,QAAQ,EAAE;QAAEO,OAAO,EAAE;MAAK,CAAC,CAAC;MACrC;IACF;;IAEA;IACAlB,oBAAoB,CAACa,KAAK,CAAC,CACxBM,IAAI,CAAEC,KAAK,IAAK;MACf,IAAI,CAACA,KAAK,IAAIC,kBAAkB,CAACD,KAAK,CAAC,EAAE;QACvC;QACAJ,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;QAChEN,QAAQ,CAAC,UAAU,EAAE;UAAEO,OAAO,EAAE;QAAK,CAAC,CAAC;MACzC,CAAC,MAAM;QACL;QACAF,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACnDP,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D;MACAZ,QAAQ,CAAC,UAAU,EAAE;QAAEO,OAAO,EAAE;MAAK,CAAC,CAAC;IACzC,CAAC,CAAC,CACDM,OAAO,CAAC,MAAMhB,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACG,QAAQ,EAAEC,QAAQ,CAAC,CAAC;;EAExB;EACA,MAAMS,kBAAkB,GAAID,KAAK,IAAK;IACpC;IACA,OACE,CAACA,KAAK,CAACK,MAAM,IACb,CAACL,KAAK,CAACM,MAAM,IACb,CAACN,KAAK,CAACO,GAAG,IACV,CAACP,KAAK,CAACQ,aAAa;IACpB;IACA,CAACR,KAAK,CAACS,aAAa;EAExB,CAAC;;EAED;EACA,IAAItB,OAAO,EAAE;IACX,oBAAOJ,OAAA,CAACF,OAAO;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACtB;;EAEA;EACA,OAAOxB,UAAU,GAAGJ,QAAQ,GAAG,IAAI;AACrC,CAAC;AAACC,EAAA,CAzDIF,cAAc;EAAA,QAGDL,WAAW,EACXD,WAAW;AAAA;AAAAoC,EAAA,GAJxB9B,cAAc;AA2DpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}