{"ast":null,"code":"var _jsxFileName = \"/Users/ianrooney/dd/Fit-Ai-Front-master/src/components/DietForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './DietPlanForm.module.css';\nimport Spinner from './Spinner';\nimport { fetchUserPreferences, getDietPlan, generateDietPlan } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DietForm = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [dietPlan, setDietPlan] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [generating, setGenerating] = useState(false);\n\n  // useEffect(() => {\n  //   const token = localStorage.getItem('token');\n  //   if (!token) return; // No token => do nothing or redirect\n\n  //   setLoading(true);\n\n  //   fetchUserPreferences(token)\n  //     .then((data) => {\n  //       if (!data) return;\n  //       setUserData(data);\n  //       return getDietPlan(token);\n  //     })\n  //     .then((plan) => {\n  //       if (plan && plan.dietPlan) {\n  //         try {\n  //           // If dietPlan is JSON\n  //           const parsed = JSON.parse(plan.dietPlan);\n  //           setDietPlan(parsed);\n  //         } catch (err) {\n  //           // Otherwise parse as text fallback\n  //           setDietPlan(parseDietPlan(plan.dietPlan));\n  //         }\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error fetching diet plan:', error);\n  //     })\n  //     .finally(() => setLoading(false));\n  // }, []);\n\n  /**\n   * parseDietPlan (Text-Fallback)\n   * -----------\n   * Splits text by blank lines => Day blocks\n   * Then each day block is lines => first line is day, rest are meals\n   * Format example:\n   *   Day 1\n   *   Breakfast - Oatmeal\n   *   Lunch - Chicken Salad\n   */\n  const parseDietPlan = (dietPlanText = '') => {\n    if (!dietPlanText.trim()) return [];\n    return dietPlanText.split('\\n\\n') // Split into day blocks by blank lines\n    .map(dayBlock => {\n      const lines = dayBlock.trim().split('\\n').map(l => l.trim());\n      if (!lines.length) return null;\n      const rawDayName = lines[0];\n      const dayNumber = rawDayName.replace(/^Day\\s*/i, ''); // e.g. \"Day 1\" => \"1\"\n      const mealLines = lines.slice(1);\n      const meals = mealLines.map(line => {\n        const [type, meal, description] = line.split(' - ').map(str => str.trim());\n        return {\n          type: type || 'Meal',\n          meal: meal || 'Unnamed Meal',\n          description: description || ''\n        };\n      });\n      return {\n        day: dayNumber,\n        meals\n      };\n    }).filter(Boolean);\n  };\n\n  /**\n   * handleGenerateDiet\n   * -----------\n   * Generates a new diet plan using userData via the API.\n   */\n  const handleGenerateDiet = async () => {\n    setGenerating(true);\n    const token = localStorage.getItem('token');\n    if (!userData) {\n      console.error('No user preferences found!');\n      setGenerating(false);\n      return;\n    }\n    try {\n      const response = await generateDietPlan(userData, token);\n      if (response && response.data.dietPlan) {\n        const parsedDietPlan = JSON.parse(response.data.dietPlan);\n        setDietPlan(parsedDietPlan);\n      } else {\n        console.error(\"API response doesn't contain a valid diet plan.\");\n      }\n    } catch (error) {\n      console.error('Error generating diet plan:', error);\n    } finally {\n      setGenerating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dietPlanFormPage,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.generateButton,\n      onClick: handleGenerateDiet,\n      disabled: generating,\n      children: generating ? 'Generating...' : 'Generate Diet Plan'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.spinnerContainer,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), !loading && dietPlan ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsContainer,\n      children: dietPlan.map((planItem, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dayCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.dayTitle,\n          children: [\"Day \", planItem.day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.mealsList,\n          children: planItem.meals.map((meal, mealIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.mealItem,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: meal.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), \":\", ' ', meal.meal, meal.description ? ` â€” ${meal.description}` : '']\n          }, mealIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, dayIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.noPlanMessage,\n      children: \"No diet plan available. Click \\\"Generate Diet Plan\\\" to create one.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(DietForm, \"2B2zE1zpplCRG6+sLxxngdg/VhY=\");\n_c = DietForm;\nexport default DietForm;\nvar _c;\n$RefreshReg$(_c, \"DietForm\");","map":{"version":3,"names":["React","useEffect","useState","styles","Spinner","fetchUserPreferences","getDietPlan","generateDietPlan","jsxDEV","_jsxDEV","DietForm","_s","userData","setUserData","dietPlan","setDietPlan","loading","setLoading","generating","setGenerating","parseDietPlan","dietPlanText","trim","split","map","dayBlock","lines","l","length","rawDayName","dayNumber","replace","mealLines","slice","meals","line","type","meal","description","str","day","filter","Boolean","handleGenerateDiet","token","localStorage","getItem","console","error","response","data","parsedDietPlan","JSON","parse","className","dietPlanFormPage","children","generateButton","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","spinnerContainer","cardsContainer","planItem","dayIndex","dayCard","dayTitle","mealsList","mealIndex","mealItem","noPlanMessage","_c","$RefreshReg$"],"sources":["/Users/ianrooney/dd/Fit-Ai-Front-master/src/components/DietForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './DietPlanForm.module.css';\nimport Spinner from './Spinner';\nimport { fetchUserPreferences, getDietPlan, generateDietPlan } from '../services/api';\n\nconst DietForm = () => {\n  const [userData, setUserData] = useState(null);\n  const [dietPlan, setDietPlan] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [generating, setGenerating] = useState(false);\n\n  // useEffect(() => {\n  //   const token = localStorage.getItem('token');\n  //   if (!token) return; // No token => do nothing or redirect\n\n  //   setLoading(true);\n\n  //   fetchUserPreferences(token)\n  //     .then((data) => {\n  //       if (!data) return;\n  //       setUserData(data);\n  //       return getDietPlan(token);\n  //     })\n  //     .then((plan) => {\n  //       if (plan && plan.dietPlan) {\n  //         try {\n  //           // If dietPlan is JSON\n  //           const parsed = JSON.parse(plan.dietPlan);\n  //           setDietPlan(parsed);\n  //         } catch (err) {\n  //           // Otherwise parse as text fallback\n  //           setDietPlan(parseDietPlan(plan.dietPlan));\n  //         }\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error fetching diet plan:', error);\n  //     })\n  //     .finally(() => setLoading(false));\n  // }, []);\n\n  /**\n   * parseDietPlan (Text-Fallback)\n   * -----------\n   * Splits text by blank lines => Day blocks\n   * Then each day block is lines => first line is day, rest are meals\n   * Format example:\n   *   Day 1\n   *   Breakfast - Oatmeal\n   *   Lunch - Chicken Salad\n   */\n  const parseDietPlan = (dietPlanText = '') => {\n    if (!dietPlanText.trim()) return [];\n\n    return dietPlanText\n      .split('\\n\\n') // Split into day blocks by blank lines\n      .map((dayBlock) => {\n        const lines = dayBlock.trim().split('\\n').map((l) => l.trim());\n        if (!lines.length) return null;\n\n        const rawDayName = lines[0];\n        const dayNumber = rawDayName.replace(/^Day\\s*/i, ''); // e.g. \"Day 1\" => \"1\"\n        const mealLines = lines.slice(1);\n\n        const meals = mealLines.map((line) => {\n          const [type, meal, description] = line.split(' - ').map((str) => str.trim());\n          return {\n            type: type || 'Meal',\n            meal: meal || 'Unnamed Meal',\n            description: description || '',\n          };\n        });\n\n        return { day: dayNumber, meals };\n      })\n      .filter(Boolean);\n  };\n\n  /**\n   * handleGenerateDiet\n   * -----------\n   * Generates a new diet plan using userData via the API.\n   */\n  const handleGenerateDiet = async () => {\n    setGenerating(true);\n    const token = localStorage.getItem('token');\n\n    if (!userData) {\n      console.error('No user preferences found!');\n      setGenerating(false);\n      return;\n    }\n\n    try {\n      const response = await generateDietPlan(userData, token);\n      if (response && response.data.dietPlan) {\n        const parsedDietPlan = JSON.parse(response.data.dietPlan);\n        setDietPlan(parsedDietPlan);\n      } else {\n        console.error(\"API response doesn't contain a valid diet plan.\");\n      }\n    } catch (error) {\n      console.error('Error generating diet plan:', error);\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  return (\n    <div className={styles.dietPlanFormPage}>\n      {/* Generate Diet Button */}\n      <button\n        className={styles.generateButton}\n        onClick={handleGenerateDiet}\n        disabled={generating}\n      >\n        {generating ? 'Generating...' : 'Generate Diet Plan'}\n      </button>\n\n      {/* Show a loading spinner if fetching */}\n      {loading && (\n        <div className={styles.spinnerContainer}>\n          <Spinner />\n        </div>\n      )}\n\n      {/* Scrollable Cards */}\n      {!loading && dietPlan ? (\n        <div className={styles.cardsContainer}>\n          {dietPlan.map((planItem, dayIndex) => (\n            <div className={styles.dayCard} key={dayIndex}>\n              <h2 className={styles.dayTitle}>Day {planItem.day}</h2>\n              <ul className={styles.mealsList}>\n                {planItem.meals.map((meal, mealIndex) => (\n                  <li className={styles.mealItem} key={mealIndex}>\n                    <strong>{meal.type}</strong>:\n                    {' '}\n                    {meal.meal}\n                    {meal.description ? ` â€” ${meal.description}` : ''}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      ) : (\n        !loading && (\n          <p className={styles.noPlanMessage}>\n            No diet plan available. Click \"Generate Diet Plan\" to create one.\n          </p>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default DietForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}